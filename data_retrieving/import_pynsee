#Download Pypi package 
#pip install pynsee[full]
#pip install matplotlib
#pip install seaborn
#pip install scipy
import pandas as pd
import matplotlib.pyplot as plt
import re 
import seaborn as sns
import numpy as np
from scipy.stats import linregress

from pynsee.utils.init_conn import init_conn
init_conn(insee_key='GvulBMLLd4u26RRdMPxYlvqjvHYa', insee_secret='MvDm1OBD_s1a4A33InvrYRT_wEga')

from pynsee.macrodata import * 
from pynsee.macrodata.get_series_list import get_series_list
from pynsee.macrodata.get_series import get_series

def clean_filename(name):
    return re.sub(r'[^a-zA-Z0-9]', '_', str(name))

def import_and_save_data(id_bank, dataframe_name):
    # Télécharger les données
    data = get_series(id_bank)
    
    # Sélectionner uniquement les colonnes "DATE" et "OBS_VALUE"
    data_filtered = data.loc[:, ['DATE', 'OBS_VALUE']]
    
    # Convertir la colonne 'DATE' en format de date
    data_filtered['DATE'] = pd.to_datetime(data_filtered['DATE'])
    
    # Renommer la colonne 'OBS_VALUE' avec le nom du DataFrame
    new_column_name = clean_filename(dataframe_name)
    data_filtered = data_filtered.rename(columns={'OBS_VALUE': new_column_name})
    
    # Afficher les premières lignes du DataFrame filtré
    print(data_filtered.head())

    # Enregistrer le DataFrame filtré dans un fichier CSV
    csv_filename = f'datas/{clean_filename(dataframe_name)}_filtered.csv'
    data_filtered.to_csv(csv_filename, index=False)
    
    return data_filtered



# Utilisation des fonctions pour chaque jeu de données

# General government debt
governement_negotiable_debts = import_and_save_data('001711531', 'negotiable_debts')

# Number of firms created
data_firms_creation = import_and_save_data('001564319', 'firms_creation')

# Unemployment rate evolution
data_unemployment_rate = import_and_save_data('001515842', 'unemployment_rate')

# Balance of payments evolution (credit)
data_BOP = import_and_save_data('001694057', 'BOP')

# Natality rate evolution
data_natality_rate = import_and_save_data('000436392', 'natality_rate')

#firms failure 
data_business_insolvencies = import_and_save_data('001656164', 'business_insolvencies')

